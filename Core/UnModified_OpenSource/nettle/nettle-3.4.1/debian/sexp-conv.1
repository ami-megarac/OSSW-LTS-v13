.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH SEXP\-CONV 1 "June 2007" "nettle 1.15"  "Nettle tools"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
sexp\-conv \- convert s-expression to a different encoding
.SH SYNOPSIS
Conversion:
.br
.B sexp-conv
.RI [ OPTION ]... 
.RI <\  INPUT-SEXP
.PP
Fingerprinting:
.br
.B sexp-conv --hash\fR[\fB=\fP\fIalgorithm\fP]
.RI [ OPTION ]...
.RI <\  INPUT-SEXP
.SH DESCRIPTION
This manual page documents briefly the
.B sexp\-conv
command.
This manual page was written for the Debian GNU/Linux distribution
because the original program does not have a manual page.
Instead, it has documentation in the GNU Info format; see below.
.PP
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively.
\fBsexp\-conv\fP is a program that converts S-expressions. It automatically
detects the s-expression syntax variant of the input. It is primarily
used by the `lsh' packages, which stores keys and most other objects
on disk in that format, but may be of other use as well.
.SH OPTIONS
This program follows the usual GNU command line syntax, with long
options starting with two dashes (`-').
A summary of options is included below.
For a complete description, see the Info files.
.TP
.B \-\-hash=\fIalgorithm\fP
Output only the hash of the s-expression, using \fIalgorithm\fP (default: sha1).
.TP
.B \-\-raw\-hash
Alias for \-\-hash, for compatibility with lsh 1.x.
.TP
.B \-\-once
Process exactly one s-expression.
.TP
.B \-\-spki\-hash
Output an SPKI hash for the object. \fBNot yet implemented.\fP
.TP
.B \-s, \-\-syntax=\fIformat\fP
Variant of S-expression to output. Valid S-expression formats are: transport,
canonical (binary), advanced, and hex (same as advanced, but numbers in hex
instead of base64).
.TP
.B \-w, \-\-width=\fIwidth\fP
Limit output to lines of \fIwidth\fP characters (has no effect on canonical syntax). Zero means no limit.
.TP
.B \-?, \-\-help
Show summary of options.
.TP
.B \-V, \-\-version
Show version of program.
.SH SEE ALSO
.BR ssh-conv (1),
.BR lsh (1),
.BR lshd (8),
http://theworld.com/~cme/spki.txt.
.br
The programs are documented fully by the
.IR "sexp"
section under the
.IR "Getting Started"
header of the lsh info page, available via the Info system.
.SH BUGS
This program should be documented in the nettle manual, not in the lsh manual.
.SH AUTHOR
This manual page was originally written by Timshel Knoll <timshel@debian.org>,
for the Debian GNU/Linux system (but may be used by others). Edited
by Magnus Holmgren <magnus@kibibyte.se>.
