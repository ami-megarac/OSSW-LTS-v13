README.Debian for lm-sensors
----------------------------

* What sensors are available on my PC?

  Most PC's built since late 1997 now come with a hardware health
  monitoring chip.  This chip may be accessed via the ISA bus or the
  SMBus, depending on the motherboard.


* What can a sensor chip do?
  
  Sensor chip usually have a few voltage inputs, usually within the 0 to
  5V range.  The inputs are usually in series with voltage dividers
  which lower the +/- 12V and +/-5V supplies to measurable range.  
  Therefore, the readings for such inputs need to be re-scaled 
  appropriately by software.

  Most chips also have a few remote temperature sensors, as well as fan 
  speed monitoring inputs.


* Is motherboard XYZ supported?

  lm-sensors doesn't support boards, but support chips.


* Sensors detection

  The detection of sensor consists of several steps.  All you need is to
  run:

    su
    sensors-detect

  Using first command you will become a root, second command will fire 
  the sensors-detect utility which will guide you through the detection
  process.  

  Once the modules are correctly loaded, you can run the "sensors"
  command to get some chip data.


* The labels for the voltage and temperature readings in "sensors" are
  incorrect!
  
  Every motherboard is different, the inputs can be connected in
  various way.  You can use the configuration file to describe how
  this measurement should be interpreted; see the comments the example
  file for more information.


* The min and max for the readings in "sensors" are incorrect

  You can customize them in the file "/etc/sensors.conf".  Don't forget
  to run "sensors -s" to write the new values to the sensors chip.


* -5V and -12V readings are way out of range

  It's very frequent that negative voltage lines are not wired because
  motherboard manufacturers don't think they're worth monitoring (they
  are mostly unused these days). You can just add "ignore inN" lines to
  "/etc/sensors.conf" to hide them.

  Another possibility is that these lines are used to monitor different
  voltages.  Only the motherboard manufacturer can tell for sure.  
  Taking a look at what voltage values the BIOS displays may provide 
  valuable hints though.


* The temperatures are wrong

  If the temperature is -48°C, the corresponding input is not connected,
  check your /etc/sensors3.conf and find section, use "ignore tempX" 
  statement to ignore this temperature source.

  If the temperature is negative, switching from diode input to
  thermistor may help.  Check your /etc/sensors3.conf and find section,
  use "set sensorX Y" statement to change the diode to thermistor.

  If the temperature is too hot, switching from thermistor input to 
  diode may help. Check your /etc/sensors3.conf and find section, use 
  "set sensorX Y" statement to change the thermistor to diode.


* My fans report exactly half/double their values compared to the BIOS

  The problem with much of the sensor data is that it is impossible to
  properly interpret some of the readings without knowing what the
  hardware configuration is.  Some fans report one "tick" each rotation,
  some report two 'ticks' each rotation.  It is easy to resolve this
  through the configuration file "/etc/sensors.conf":

     chip lm78-*             # Or whatever chip this relates to
     compute fan1 2*@,@/2    # This will double the fan1 reading
                             # -- or --
     compute fan1 @/2,2*@    # This will halve the fan1 reading


* Fans sometimes/always read 0

  You may not have a fan with a tachometer output.  Fans with tachometer
  outputs have at least 3 wires.  Fans with only 2 wires cannot, in 
  general, report their speed.

  You may need to increase the "fan divisor".  For more details see the
  documentation in "/usr/share/doc/lm-sensors/fan-divisors"


* The current value is within range but there is still an ALARM warning

  The ALARM indications in "sensors" are those reported by the sensor
  chip itself.  They are NOT calculated by "sensors".  "sensors" simply
  reads the ALARM bits and reports them.

  An ALARM will go off when a minimum or maximum limit is crossed.
  The ALARM is then latched - that is, it will stay there until the
  chip's registers are next accessed - which will be the next time you
  read these values, but not within (usually) 1.5 seconds since the last
  update.

  Reading the registers clears the ALARMS, unless the current value is
  still out of range.

 -- Aurelien Jarno <aurel32@debian.org>  Tue, 25 May 2010 11:07:04 +0200 
