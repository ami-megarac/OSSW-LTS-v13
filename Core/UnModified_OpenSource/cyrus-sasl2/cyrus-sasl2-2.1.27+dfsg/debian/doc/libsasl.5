.\"     Title: libsasl
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 12/15/2008
.\"    Manual: 
.\"    Source: 
.\"
.TH "LIBSASL" "5" "12/15/2008" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
libsasl \- authentication library
.SH "SYNOPSIS"
.PP
Cyrus SASL library handling communication between an application and the Cyrus SASL authentication framework\&.
.SH "DESCRIPTION"
.PP
This document describes generic configuration options for the Cyrus SASL authentication library
libsasl\&.
.PP
The library handles communication between an application and the Cyrus SASL authentication framework\&. Both exchange information before
libsasl
can start offering authentication services for the application\&.
.PP
The application, among other data, sends the
\fIservice_name\fR\&. The service name is the services name as specified by IANA\&. SMTP servers, for example, send
\fBsmtp\fR
as
\fIservice_name\fR\&. This information is handed over by
libsasl
e\&.g\&. when Kerberos or PAM authentication takes place\&.
.PP
Configuration options in general are read either from a file or passed by the application using
libsasl
during library initialization\&.
.SS "File\-Based configuration"
.PP
When an application (server) starts, it initializes the
libsasl
library\&. The application passes
\fIapp_name\fR
(application name) to the SASL library\&. Its value is used to construct the name of the application specific SASL configuration file\&. The Cyrus SASL sample\-server, for example, sends
\fBsample\fR
as
\fIapp_name\fR\&. Using this value the SASL library will search the configuration directories for a file named
\fIsample\&.conf\fR
and read configuration options from it\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Consult the applications manual to determine what
\fIapp_name\fR
it sends to the Cyrus SASL library\&.
.SS "Application\-Based Configuration"
.PP
Configuration options for
libsasl
are written down together with application specific options in the applications configuration file\&. The application reads them and passes them over to
libsasl
when it loads the library\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
An example for application\-based configuration is the Cyrus IMAP server
imapd\&. SASL configuration is written to
\fIimapd\&.conf\fR
and passed to the SASL library when the
imapd
server starts\&.
.SH "CONFIGURATION SYNTAX"
.PP
The general format of Cyrus SASL configuration file is as follows:
.PP
Configuration options
.RS 4
Configuration options are written each on a single physical line\&. Parameter and value must be separated by a colon and a single whitespace:
.sp
.RS 4
.nf
parameter: value
.fi
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Important
There must be no trailing whitespace after the value or Cyrus SASL will fail to apply the value appropriately!
.RE
.PP
Comments, Emtpy lines and whitespace\-only lines
.RS 4
Empty lines and whitespace\-only lines are ignored, as are lines whose first non\-whitespace character is a
\(lq#\(rq\&.
.RE
.SH "OPTIONS"
.PP
There are generic options and options specific to the password verification service or auxiliary property plugin choosen by the administrator\&. Such specific options are documented in manuals listed in
the section called \(lqSEE ALSO\(rq\&.
.PP
The following configuration parameters are generic configuration options:
.PP
\fIauthdaemond_path\fR (default: \fB/dev/null\fR)
.RS 4
Path to Courier MTA authdaemond\'s unix socket\&. Only applicable when
\fIpwcheck_method\fR
is set to
\fBauthdaemond\fR\&.
.RE
.PP
\fIauto_transition\fR: (default: \fBno\fR)
.RS 4
Automatically transition users to other mechanisms when they do a successful plaintext authentication and if an auxprop plugin is used\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Important
This option does not apply to the
\fBldapdb\fR(5)
plugin\&. It is a read\-only plugin\&.
.PP
\fBno\fR
.RS 4
Do not transition users to other mechanisms\&.
.RE
.PP
\fBnoplain\fR
.RS 4
Transition users to other mechanisms, but write non\-plaintext secrets only\&.
.RE
.PP
\fByes\fR
.RS 4
Transition users to other mechanisms\&.
.RE
.sp
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
The only mechanisms (as currently implemented) which don\'t use plaintext secrets are OTP and SRP\&.
.RE
.PP
\fIauxprop_plugin\fR: (default: empty)
.RS 4
A whitespace\-separated list of one or more auxiliary plugins used if the
\fIpwcheck_method\fR
parameter specifies
\fBauxprop\fR
as an option\&. Plugins will be queried in list order\&. If no plugin is specified, all available plugins will be queried\&.
.PP
\fBldapdb\fR
.RS 4
Specify
\fBldapdb\fR
to use the Cyrus SASL
\fBldapdb\fR(5)
plugin\&.
.RE
.PP
\fBsasldb\fR
.RS 4
Specify
\fBsasldb\fR
to use the Cyrus SASL
\fBsasldb\fR(5)
plugin\&.
.RE
.PP
\fBsql\fR
.RS 4
Specify
\fBsql\fR
to use the Cyrus SASL
\fBsql\fR(5)
plugin\&.
.RE
.RE
.PP
\fIlog_level\fR: (default: \fB1\fR)
.RS 4
Specifies a numeric log level\&. Available log levels are:
.PP
\fB0\fR
.RS 4
Don\'t log anything
.RE
.PP
\fB1\fR
.RS 4
Log unusual errors
.RE
.PP
\fB2\fR
.RS 4
Log all authentication failures
.RE
.PP
\fB3\fR
.RS 4
Log non\-fatal warnings
.RE
.PP
\fB4\fR
.RS 4
More verbose than 3
.RE
.PP
\fB5\fR
.RS 4
More verbose than 4
.RE
.PP
\fB6\fR
.RS 4
Traces of internal protocols
.RE
.PP
\fB7\fR
.RS 4
Traces of internal protocols, including passwords
.RE
.sp
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Important
Cyrus SASL sends log messages to the application that runs it\&. The application decides if it forwards such messages to the
\fBsysklogd\fR(8)
service, to which
\fIfacility\fR
they are sent and which
\fIpriority\fR
is given to the message\&.
.RE
.PP
\fImech_list\fR: (default: empty)
.RS 4
The optional
\fImech_list\fR
parameter specifies a whitespace\-separated list of one or more mechanisms allowed for authentication\&.
.RE
.PP
\fIpwcheck_method\fR: (default: \fBauxprop\fR)
.RS 4
A whitespace\-separated list of one or more mechanisms\&. Cyrus SASL provides the following mechanisms:
.PP
\fBauthdaemond\fR
.RS 4
Configures Cyrus SASL to contact the Courier MTA
\fBauthdaemond\fR(8)
password verification service for password verification\&.
.RE
.PP
\fBalwaystrue\fR
.RS 4
TODO
.RE
.PP
\fBauxprop\fR
.RS 4
Cyrus SASL will use its own plugin infrastructure to verify passwords\&. The
\fI\fIauxprop_plugin\fR\fR
parameter controls which plugins will be used\&.
.RE
.PP
\fBpwcheck\fR
.RS 4
Verify passwords using the Cyrus SASL
\fBpwcheck\fR(8)
password verification service\&. The pwcheck daemon is considered deprecated and should not be used anymore\&. Use the saslauthd password verification service instead\&.
.RE
.PP
\fBsaslauthd\fR
.RS 4
Verify passwords using the Cyrus SASL
\fBsaslauthd\fR(8)
password verification service\&.
.RE
.RE
.PP
\fIsaslauthd_path\fR: (default: empty)
.RS 4
Path to
\fBsaslauthd\fR(8)
run directory (including the
\fI/mux\fR
named pipe)
.RE
.SH "SEE ALSO"
.PP
\fBauthdaemond\fR(5),
\fBldapdb\fR(5),
\fBlibsasl\fR(5),
\fBsaslauthd\fR(8),
\fBsaslauthd.conf\fR(5),
\fBsaslpasswd2\fR(5),
\fBsasldblistusers2\fR(5),
\fBsasldb\fR(5),
\fBsql\fR(5)
.SH "README FILES"
.PP
\fIREADME\&.Debian\fR
.SH "AUTHOR"
.PP
This manual was written for the Debian distribution because the original program does not have a manual page\&. Parts of the documentation have been taken from the Cyrus SASL\'s
\fIoptions\&.html\fR\&.
.PP
.RS 4
.nf
Patrick Ben Koetter
<p@state\-of\-mind\&.de>
.fi
.RE
