From 9f29397aacc5e43425562dab3dbf588a06e4573c Mon Sep 17 00:00:00 2001
From: "Brian C. Lane" <bcl@redhat.com>
Date: Wed, 4 Feb 2015 16:46:07 -0800
Subject: libparted: device mapper uses 512b sectors

device mapper doesn't use the device's sector size when creating a
table. It always uses 512b units. This causes partitions to be created
8x smaller than expected on devices with 4906b sectors.

Origin: backport, http://git.savannah.gnu.org/cgit/parted.git/commit?id=f98f791e19669b900345dad7d96ea4df974e4596
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1441930
Last-Update: 2015-12-22

Patch-Name: dm-512b-sectors.patch
---
 libparted/arch/linux.c | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/libparted/arch/linux.c b/libparted/arch/linux.c
index 03c4e0b4..d91ad9a0 100644
--- a/libparted/arch/linux.c
+++ b/libparted/arch/linux.c
@@ -2768,6 +2768,12 @@ _dm_get_partition_start_and_length(PedPartition const *part,
         if (sscanf (params, "%d:%d %Ld", &major, &minor, start) != 3)
                 goto err;
         rc = 1;
+
+        /* device-mapper uses 512b units, make sure we return length and start in terms of the device's
+         * sector size.
+         */
+        *start /= (part->disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT);
+        *length /= (part->disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT);
 err:
         free (path);
         dm_task_destroy(task);
@@ -2815,8 +2821,10 @@ _dm_add_partition (PedDisk* disk, const PedPartition* part)
         /* Caution: dm_task_destroy frees dev_name.  */
         dm_task_destroy (task);
         task = NULL;
+        /* device-mapper uses 512b units, not the device's sector size */
         if ( ! (params = zasprintf ("%d:%d %lld", arch_specific->major,
-                                    arch_specific->minor, part->geom.start)))
+                                    arch_specific->minor,
+                                    part->geom.start * (disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT))))
                 goto err;
 
         task = dm_task_create (DM_DEVICE_CREATE);
@@ -2826,7 +2834,8 @@ _dm_add_partition (PedDisk* disk, const PedPartition* part)
         dm_task_set_name (task, vol_name);
         if (vol_uuid)
                 dm_task_set_uuid (task, vol_uuid);
-        dm_task_add_target (task, 0, part->geom.length,
+        /* device-mapper uses 512b units, not the device's sector size */
+        dm_task_add_target (task, 0, part->geom.length * (disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT),
                 "linear", params);
         if (!dm_task_set_cookie (task, &cookie, 0))
                 goto err;
@@ -2883,8 +2892,11 @@ _dm_resize_partition (PedDisk* disk, const PedPartition* part)
         /* Caution: dm_task_destroy frees dev_name.  */
         dm_task_destroy (task);
         task = NULL;
+
+        /* device-mapper uses 512b units, not the device's sector size */
         if ( ! (params = zasprintf ("%d:%d %lld", arch_specific->major,
-                                    arch_specific->minor, part->geom.start)))
+                                    arch_specific->minor,
+                                    part->geom.start * (disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT))))
                 goto err;
 
         task = dm_task_create (DM_DEVICE_RELOAD);
@@ -2892,7 +2904,8 @@ _dm_resize_partition (PedDisk* disk, const PedPartition* part)
                 goto err;
 
         dm_task_set_name (task, vol_name);
-        dm_task_add_target (task, 0, part->geom.length,
+        /* device-mapper uses 512b units, not the device's sector size */
+        dm_task_add_target (task, 0, part->geom.length * (disk->dev->sector_size / PED_SECTOR_SIZE_DEFAULT),
                 "linear", params);
         if (!dm_task_set_cookie (task, &cookie, 0))
                 goto err;
