?RCS: $Id: archlib.U,v 3.1 1999/07/08 18:32:29 doughera Exp doughera $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS:
?RCS: This file is included with or a derivative work of a file included
?RCS: with the metaconfig program of Raphael Manfredi's "dist" distribution.
?RCS: In accordance with clause 7 of dist's modified Artistic License:
?RCS:
?RCS:     You may distribute under the terms of either the GNU General Public
?RCS:     License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Original Author: Andy Dougherty <doughera@lafcol.lafayette.edu>
?RCS:
?RCS: $Log: archlib.U,v $
?RCS: Revision 3.1  1999/07/08 18:32:29  doughera
?RCS: Updated for perl5.005_5x
?RCS:
?RCS:
?RCS: Revision 3.0.1.4  1995/09/25  09:15:18  ram
?RCS: patch59: unit is now forced to the top of Configure, if possible
?RCS:
?RCS: Revision 3.0.1.3  1995/02/15  14:14:14  ram
?RCS: patch51: architecture name is now computed by a separate unit
?RCS:
?RCS: Revision 3.0.1.2  1995/01/30  14:32:22  ram
?RCS: patch49: archname is now systematically recomputed
?RCS: patch49: can now handle installation prefix changes (from WED)
?RCS:
?RCS: Revision 3.0.1.1  1994/10/29  16:02:36  ram
?RCS: patch36: created by ADO
?RCS:
?MAKE:d_archlib archlib archlibexp installarchlib: \
	cat Getfile Setprefixvar Loc Oldconfig archname spackage  \
	privlib sed test Prefixit Prefixup binexp
?MAKE:	-pick add $@ %<
?Y:TOP
?S:d_archlib:
?S:	This variable conditionally defines ARCHLIB to hold the pathname
?S:	of architecture-dependent library files for $package.  If
?S:	$archlib is the same as $privlib, then this is set to undef.
?S:.
?D:archlib=''
?S:archlib:
?S:	This variable holds the name of the directory in which the user wants
?S:	to put architecture-dependent public library files for $package.
?S:	It is most often a local directory such as /usr/local/lib.
?S:	Programs using this variable must be prepared to deal
?S:	with filename expansion.
?S:.
?D:archlibexp=''
?S:archlibexp:
?S:	This variable is the same as the archlib variable, but is
?S:	filename expanded at configuration time, for convenient use.
?S:.
?D:installarchlib=''
?S:installarchlib:
?S:	This variable is really the same as archlibexp but may differ on
?S:	those systems using AFS. For extra portability, only this variable
?S:	should be used in makefiles.
?S:.
?C:ARCHLIB:
?C:	This variable, if defined, holds the name of the directory in
?C:	which the user wants to put architecture-dependent public
?C:	library files for $package.  It is most often a local directory
?C:	such as /usr/local/lib.  Programs using this variable must be
?C:	prepared to deal with filename expansion.  If ARCHLIB is the
?C:	same as PRIVLIB, it is not defined, since presumably the
?C:	program already searches PRIVLIB.
?C:.
?C:ARCHLIB_EXP:
?C:	This symbol contains the ~name expanded version of ARCHLIB, to be used
?C:	in programs that are not prepared to deal with ~ expansion at run-time.
?C:.
?H:#$d_archlib ARCHLIB "$archlib"		/**/
?H:#$d_archlib ARCHLIB_EXP "$archlibexp"		/**/
?H:.
?T: tdflt
?LINT:change prefixvar
?LINT:set archlib
?LINT:set archlibexp
?LINT:set installarchlib
: determine where public architecture dependent libraries go
set archlib archlib
eval $prefixit
: privlib default is /usr/local/lib/$package/$version
: archlib default is /usr/local/lib/$package/$version/$archname
: privlib may have an optional trailing /share.
tdflt=`echo $privlib | $sed 's,/share$,,'`
tdflt=$tdflt/$archname
case "$archlib" in
'')	dflt=$tdflt
	;;
*)	dflt="$archlib"
    ;;
esac
$cat <<EOM

$spackage contains architecture-dependent library files.  If you are
sharing libraries in a heterogeneous environment, you might store
these files in a separate location.  Otherwise, you can just include
them with the rest of the public library files.

EOM
?X: Force dependency on bin.U
fn=$binexp
fn=d+~
rp='Where do you want to put the public architecture-dependent libraries?'
. ./getfile
prefixvar=archlib
. ./setprefixvar
if $test X"$archlib" = X"$privlib"; then
	d_archlib="$undef"
else
	d_archlib="$define"
fi

