?RCS: Copyright (c) 2014-2014, Karl Williamson & H.Merijn Brand
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?MAKE:d_wcscmp: Compile cat rm_try run Oldconfig Setvar
?MAKE:	-pick add $@ %<
?S:d_wcscmp:
?S:	This variable conditionally defines the HAS_WCSCMP symbol if the
?S:	wcscmp() routine is available and can be used to compare wide
?S:	character strings.
?S:.
?C:HAS_WCSCMP:
?C:	This symbol, if defined, indicates that the wcscmp routine is
?C:	available to compare two wide character strings.
?C:.
?H:#$d_wcscmp HAS_WCSCMP	/**/
?H:.
?F:!try
?LINT: set d_wcscmp
: look for wcscmp
echo " "
$cat >try.c <<'EOCP'
#include <stdio.h>
#include <wchar.h>
int main ()
{
    wchar_t *s = L" ";
    return (wcscmp (s, s) ? 1 : 0);
    }
EOCP
set try
?X: if $cc $ccflags $ldflags -o try try.c $libs >/dev/null 2>&1 ; then
val="$undef"
if eval $compile; then
    `$run ./try`
    case "$?" in
	0)  echo "A working wcscmp() found." >&4
	    val="$define" ;;
	*)  echo "wcscmp() found, but it doesn't work" >&4
	    ;;
	esac
else
    echo "wcscmp() NOT found." >&4
    fi
set d_wcscmp
eval $setvar
$rm_try

