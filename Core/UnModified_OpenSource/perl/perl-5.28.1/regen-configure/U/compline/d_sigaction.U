?RCS: $Id: d_sigaction.U,v 3.0.1.1 1997/02/28 15:44:29 ram Exp $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: d_sigaction.U,v $
?RCS: Revision 3.0.1.1  1997/02/28  15:44:29  ram
?RCS: patch61: created
?RCS:
?RCS:
?MAKE:d_sigaction: Csym Compile Setvar cat rm_try i_stdlib
?MAKE:	-pick add $@ %<
?S:d_sigaction:
?S:	This variable conditionally defines the HAS_SIGACTION symbol, which
?S:	indicates that the Vr4 sigaction() routine is available.
?S:.
?C:HAS_SIGACTION:
?C:	This symbol, if defined, indicates that Vr4's sigaction() routine
?C:	is available.
?C:.
?H:#$d_sigaction HAS_SIGACTION	/**/
?H:.
?T:val
?LINT:set d_sigaction
: see if we have sigaction
echo " "
if set sigaction val -f d_sigaction; eval $csym; $val; then
	echo 'sigaction() found.' >&4
?X:
?X: Solaris 2.5_x86 with SunWorks Pro C 3.0.1 doesn't have a complete
?X: sigaction structure if compiled with cc -Xc.  This compile test
?X: will fail then.  <doughera@lafcol.lafayette.edu>
?X:
	$cat > try.c <<EOP
#include <stdio.h>
#include <sys/types.h>
#include <signal.h>
#$i_stdlib I_STDLIB
#ifdef I_STDLIB
#include <stdlib.h>
#endif
int main()
{
    struct sigaction act, oact;
    act.sa_flags = 0;
    oact.sa_handler = 0;
    /* so that act and oact are used */
    exit(act.sa_flags == 0 &&  oact.sa_handler == 0);
}
EOP
	set try
	if eval $compile_ok; then
		val="$define"
	else
		echo "But you don't seem to have a usable struct sigaction." >&4
		val="$undef"
	fi
else
	echo 'sigaction NOT found.' >&4
	val="$undef"
fi
set d_sigaction; eval $setvar
$rm_try

