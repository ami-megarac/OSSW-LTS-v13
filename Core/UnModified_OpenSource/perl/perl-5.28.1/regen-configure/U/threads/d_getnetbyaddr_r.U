?RCS: $Id: d_getnetbyaddr_r.U,v 0RCS:
?RCS: Copyright (c) 2002,2003 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_getnetbyaddr_r getnetbyaddr_r_proto: Inlibc Protochk Hasproto \
	i_systypes usethreads i_netdb extern_C
?MAKE:	-pick add $@ %<
?S:d_getnetbyaddr_r:
?S:	This variable conditionally defines the HAS_GETNETBYADDR_R symbol,
?S:	which indicates to the C program that the getnetbyaddr_r()
?S:	routine is available.
?S:.
?S:getnetbyaddr_r_proto:
?S:	This variable encodes the prototype of getnetbyaddr_r.
?S:	It is zero if d_getnetbyaddr_r is undef, and one of the
?S:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r
?S:	is defined.
?S:.
?C:HAS_GETNETBYADDR_R:
?C:	This symbol, if defined, indicates that the getnetbyaddr_r routine
?C:	is available to getnetbyaddr re-entrantly.
?C:.
?C:GETNETBYADDR_R_PROTO:
?C:	This symbol encodes the prototype of getnetbyaddr_r.
?C:	It is zero if d_getnetbyaddr_r is undef, and one of the
?C:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r
?C:	is defined.
?C:.
?H:#$d_getnetbyaddr_r HAS_GETNETBYADDR_R	/**/
?H:#define GETNETBYADDR_R_PROTO $getnetbyaddr_r_proto	/**/
?H:.
?T:try hdrs d_getnetbyaddr_r_proto
: see if getnetbyaddr_r exists
set getnetbyaddr_r d_getnetbyaddr_r
eval $inlibc
case "$d_getnetbyaddr_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_netdb netdb.h"
	case "$d_getnetbyaddr_r_proto:$usethreads" in
	":define")	d_getnetbyaddr_r_proto=define
		set d_getnetbyaddr_r_proto getnetbyaddr_r $hdrs
		eval $hasproto ;;
	*)	;;
	esac
	case "$d_getnetbyaddr_r_proto" in
	define)
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(unsigned long, int, struct netent*, char*, size_t, struct netent**, int*);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_UISBWRE ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(long, int, struct netent*, char*, int);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_LISBI ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='struct netent* getnetbyaddr_r(in_addr_t, int, struct netent*, char*, int);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=S_TISBI ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='struct netent* getnetbyaddr_r(long, int, struct netent*, char*, int);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=S_LISBI ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(in_addr_t, int, struct netent*, struct netent_data*);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_TISD ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(long, int, struct netent*, struct netent_data*);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_LISD ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(int, int, struct netent*, struct netent_data*);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_IISD ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0) try='int getnetbyaddr_r(uint32_t, int, struct netent*, char*, size_t, struct netent**, int*);'
	./protochk "$extern_C $try" $hdrs && getnetbyaddr_r_proto=I_uISBWRE ;;
	esac
	case "$getnetbyaddr_r_proto" in
	''|0)	d_getnetbyaddr_r=undef
		getnetbyaddr_r_proto=0
		echo "Disabling getnetbyaddr_r, cannot determine prototype." >&4 ;;
	* )	case "$getnetbyaddr_r_proto" in
		REENTRANT_PROTO*) ;;
		*) getnetbyaddr_r_proto="REENTRANT_PROTO_$getnetbyaddr_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
	*)	case "$usethreads" in
		define) echo "getnetbyaddr_r has no prototype, not using it." >&4 ;;
		esac
		d_getnetbyaddr_r=undef
		getnetbyaddr_r_proto=0
		;;
	esac
	;;
*)	getnetbyaddr_r_proto=0
	;;
esac

