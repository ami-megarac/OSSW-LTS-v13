?RCS: $Id: d_random_r.U,v 0RCS:
?RCS: Copyright (c) 2002,2003 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_random_r random_r_proto: Inlibc Protochk Hasproto i_systypes \
	usethreads i_stdlib extern_C
?MAKE:	-pick add $@ %<
?S:d_random_r:
?S:	This variable conditionally defines the HAS_RANDOM_R symbol,
?S:	which indicates to the C program that the random_r()
?S:	routine is available.
?S:.
?S:random_r_proto:
?S:	This variable encodes the prototype of random_r.
?S:	It is zero if d_random_r is undef, and one of the
?S:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r
?S:	is defined.
?S:.
?C:HAS_RANDOM_R:
?C:	This symbol, if defined, indicates that the random_r routine
?C:	is available to random re-entrantly.
?C:.
?C:RANDOM_R_PROTO:
?C:	This symbol encodes the prototype of random_r.
?C:	It is zero if d_random_r is undef, and one of the
?C:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r
?C:	is defined.
?C:.
?H:#$d_random_r HAS_RANDOM_R	/**/
?H:#define RANDOM_R_PROTO $random_r_proto	/**/
?H:.
?T:try hdrs d_random_r_proto
: see if random_r exists
set random_r d_random_r
eval $inlibc
case "$d_random_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_stdlib stdlib.h"
	case "$d_random_r_proto:$usethreads" in
	":define")	d_random_r_proto=define
		set d_random_r_proto random_r $hdrs
		eval $hasproto ;;
	*)	;;
	esac
	case "$d_random_r_proto" in
	define)
	case "$random_r_proto" in
	''|0) try='int random_r(int*, struct random_data*);'
	./protochk "$extern_C $try" $hdrs && random_r_proto=I_iS ;;
	esac
	case "$random_r_proto" in
	''|0) try='int random_r(long*, struct random_data*);'
	./protochk "$extern_C $try" $hdrs && random_r_proto=I_lS ;;
	esac
	case "$random_r_proto" in
	''|0) try='int random_r(struct random_data*, int32_t*);'
	./protochk "$extern_C $try" $hdrs && random_r_proto=I_St ;;
	esac
	case "$random_r_proto" in
	''|0)	d_random_r=undef
		random_r_proto=0
		echo "Disabling random_r, cannot determine prototype." >&4 ;;
	* )	case "$random_r_proto" in
		REENTRANT_PROTO*) ;;
		*) random_r_proto="REENTRANT_PROTO_$random_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
	*)	case "$usethreads" in
		define) echo "random_r has no prototype, not using it." >&4 ;;
		esac
		d_random_r=undef
		random_r_proto=0
		;;
	esac
	;;
*)	random_r_proto=0
	;;
esac

