?RCS: $Id: d_getservbyport_r.U,v 0RCS:
?RCS: Copyright (c) 2002,2003 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_getservbyport_r getservbyport_r_proto: Inlibc Protochk Hasproto \
	i_systypes usethreads i_netdb extern_C
?MAKE:	-pick add $@ %<
?S:d_getservbyport_r:
?S:	This variable conditionally defines the HAS_GETSERVBYPORT_R symbol,
?S:	which indicates to the C program that the getservbyport_r()
?S:	routine is available.
?S:.
?S:getservbyport_r_proto:
?S:	This variable encodes the prototype of getservbyport_r.
?S:	It is zero if d_getservbyport_r is undef, and one of the
?S:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r
?S:	is defined.
?S:.
?C:HAS_GETSERVBYPORT_R:
?C:	This symbol, if defined, indicates that the getservbyport_r routine
?C:	is available to getservbyport re-entrantly.
?C:.
?C:GETSERVBYPORT_R_PROTO:
?C:	This symbol encodes the prototype of getservbyport_r.
?C:	It is zero if d_getservbyport_r is undef, and one of the
?C:	REENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r
?C:	is defined.
?C:.
?H:#$d_getservbyport_r HAS_GETSERVBYPORT_R	/**/
?H:#define GETSERVBYPORT_R_PROTO $getservbyport_r_proto	/**/
?H:.
?T:try hdrs d_getservbyport_r_proto
: see if getservbyport_r exists
set getservbyport_r d_getservbyport_r
eval $inlibc
case "$d_getservbyport_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_netdb netdb.h"
	case "$d_getservbyport_r_proto:$usethreads" in
	":define")	d_getservbyport_r_proto=define
		set d_getservbyport_r_proto getservbyport_r $hdrs
		eval $hasproto ;;
	*)	;;
	esac
	case "$d_getservbyport_r_proto" in
	define)
	case "$getservbyport_r_proto" in
	''|0) try='int getservbyport_r(int, const char*, struct servent*, char*, size_t, struct servent**);'
	./protochk "$extern_C $try" $hdrs && getservbyport_r_proto=I_ICSBWR ;;
	esac
	case "$getservbyport_r_proto" in
	''|0) try='struct servent* getservbyport_r(int, const char*, struct servent*, char*, int);'
	./protochk "$extern_C $try" $hdrs && getservbyport_r_proto=S_ICSBI ;;
	esac
	case "$getservbyport_r_proto" in
	''|0) try='int getservbyport_r(int, const char*, struct servent*, struct servent_data*);'
	./protochk "$extern_C $try" $hdrs && getservbyport_r_proto=I_ICSD ;;
	esac
	case "$getservbyport_r_proto" in
	''|0)	d_getservbyport_r=undef
		getservbyport_r_proto=0
		echo "Disabling getservbyport_r, cannot determine prototype." >&4 ;;
	* )	case "$getservbyport_r_proto" in
		REENTRANT_PROTO*) ;;
		*) getservbyport_r_proto="REENTRANT_PROTO_$getservbyport_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
	*)	case "$usethreads" in
		define) echo "getservbyport_r has no prototype, not using it." >&4 ;;
		esac
		d_getservbyport_r=undef
		getservbyport_r_proto=0
		;;
	esac
	;;
*)	getservbyport_r_proto=0
	;;
esac

