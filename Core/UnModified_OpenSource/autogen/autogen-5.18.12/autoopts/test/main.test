#! /bin/sh
#  -*- Mode: Shell-Script -*-
# ----------------------------------------------------------------------
# main.test ---  test main program attribute
#                    make sure that when it is not specified
#                    then option processing consumes all args.
#
# Author:            Bruce Korb <bkorb@gnu.org>
##
##  This file is part of AutoOpts, a companion to AutoGen.
##  AutoOpts is free software.
##  AutoOpts is Copyright (C) 1992-2015 by Bruce Korb - all rights reserved
##
##  AutoOpts is available under any one of two licenses.  The license
##  in use must be one of these two and the choice is under the control
##  of the user of the license.
##
##   The GNU Lesser General Public License, version 3 or later
##      See the files "COPYING.lgplv3" and "COPYING.gplv3"
##
##   The Modified Berkeley Software Distribution License
##      See the file "COPYING.mbsd"
##
##  These files have the following sha256 sums:
##
##  8584710e9b04216a394078dc156b781d0b47e1729104d666658aecef8ee32e95  COPYING.gplv3
##  4379e7444a0e2ce2b12dd6f5a52a27a4d02d39d247901d3285c88cf0d37f477b  COPYING.lgplv3
##  13aa749a5b0a454917a944ed8fffc530b784f5ead522b1aacaf4ec8aa55a6239  COPYING.mbsd
#
# ----------------------------------------------------------------------

. ./defs

# # # # # # # # # # DEFINITIONS FILE # # # # # # # # #

echo "creating ${testname}.def in `pwd`"
testname="${testname}" \
argument="${argument}" long_opts="${long_opts}" \
${SHELLX} ${stdopts} option:'opt init' second=020 || \
    failure "Could not run stdopts.def"

exec 4> ${testname}.def2
${SED} '/test_main=/d' ${testname}.def >&4
unset test_main
cat >&4 <<-  _EOF_
	explain  = 'This is some explanatory text.';
	argument = '[ <argument> ... ]';
	main = {
	  handler-proc = fumble;
	  fumble-code  = '    printf("%s\n", pz_entry);';
	  main-type    = for-each;
	  interleaved;
	};
	_EOF_
exec 4>&-
mv -f ${testname}.def2 ${testname}.def

echo ${AG_L} ${testname}.def
${AG_L} ${testname}.def || \
  failure AutoGen could not process

compile "-?"

# # # # # # # # # # HELP OUTPUT FILE # # # # # # # # #

basehlp=${testname}.hlp
echo creating ${basehlp}
clean_help > ${basehlp} <<'_EOF_'
test_main - Test AutoOpts for main
Usage:  main [ -<flag> [<val>] ]... [ <argument> ... ]
  Flg Arg Option-Name    Description
   -o Str option         The option option descrip
   -s Num second         The second option descrip
   -? no  help           display extended usage information and exit
   -! no  more-help      extended usage information passed thru pager

This is some explanatory text.

If no arguments are provided, input arguments are read from stdin,
one per line; blank and '#'-prefixed lines are comments.
Options may appear in the input interspersed with the 'normal' input.
'stdin' may not be a terminal (tty).
_EOF_

pair=`echo ${testname}.h*lp`
cmp -s $pair || \
  failure "DIFFER: $pair
`diff $pair`"

# # # # # # # # # # TEST OPERATION # # # # # # # # # #
sedcmd='/illegal option /d'
echo '--help' | ./${testname} 2>&1 | clean_help > ${testname}.out

pair="${testname}.hlp ${testname}.out"
cmp -s $pair || \
  failure "DIFFER: $pair
`diff ${testname}.hlp ${testname}.out`"

./${testname} > ${testname}.out2 <<EOF
the
-s 5
quick
brown fox
EOF

cat > ${testname}.base2 <<\_EOF_
the
quick
brown fox
_EOF_

cmp -s ${testname}.base2 ${testname}.out2 || \
  failure "`diff ${testname}.base2 ${testname}.out2`"

cleanup

## Local Variables:
## mode: shell-script
## indent-tabs-mode: nil
## sh-indentation: 2
## End:

# end of main.test
