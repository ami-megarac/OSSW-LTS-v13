--- busybox/networking/udhcp/dhcpc.c	2019-01-21 18:24:38.390496646 +0800
+++ busybox/networking/udhcp/dhcpc.c	2019-01-22 10:07:51.851928702 +0800
@@ -102,7 +102,7 @@
 	[OPTION_IP              ] = sizeof("255.255.255.255 "),
 	[OPTION_IP_PAIR         ] = sizeof("255.255.255.255 ") * 2,
 	[OPTION_STATIC_ROUTES   ] = sizeof("255.255.255.255/32 255.255.255.255 "),
-	[OPTION_6RD             ] = sizeof("32 128 ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 255.255.255.255 "),
+	[OPTION_6RD             ] = sizeof("132 128 ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 255.255.255.255 "),
 	[OPTION_STRING          ] = 1,
 	[OPTION_STRING_HOST     ] = 1,
 #if ENABLE_FEATURE_UDHCP_RFC3397
@@ -235,7 +235,7 @@
 	type = optflag->flags & OPTION_TYPE_MASK;
 	optlen = dhcp_option_lengths[type];
 	upper_length = len_of_option_as_string[type]
-		* ((unsigned)(len + optlen - 1) / (unsigned)optlen);
+		* ((unsigned)(len + optlen) / (unsigned)optlen);
 
 	dest = ret = xmalloc(upper_length + strlen(opt_name) + 2);
 	dest += sprintf(ret, "%s=", opt_name);
@@ -1459,7 +1459,6 @@
 	/* Equivalent of doing a fflush after every \n */
 	setlinebuf(stdout);
 	/* Create pidfile */
-	write_pidfile(client_config.pidfile);
 	/* Goes to stdout (unless NOMMU) and possibly syslog */
 	bb_info_msg("%s (v"BB_VER") started", applet_name);
 #ifdef CONFIG_SPX_FEATURE_DCMI_VERSION_1_5_SUPPORT
@@ -1506,7 +1505,7 @@
 	packet_num = 0;
 	timeout = 0;
 	already_waited_sec = 0;
-
+        write_pidfile(client_config.pidfile);
 	/* Main event loop. select() waits on signal pipe and possibly
 	 * on sockfd.
 	 * "continue" statements in code below jump to the top of the loop.
@@ -1813,7 +1812,7 @@
  * might work too.
  * "Next server" and router are definitely wrong ones to use, though...
  */
-				temp = udhcp_get_option(&packet, DHCP_SERVER_ID);
+				temp = udhcp_get_option32(&packet, DHCP_SERVER_ID);
 				if (!temp) {
 					bb_error_msg("no server ID, ignoring packet");
 					continue;
@@ -1839,7 +1838,7 @@
 				uint32_t lease_seconds;
 				struct in_addr temp_addr;
 
-				temp = udhcp_get_option(&packet, DHCP_LEASE_TIME);
+				temp = udhcp_get_option32(&packet, DHCP_LEASE_TIME);
 				if (!temp) {
 					bb_error_msg("no lease time with ACK, using 1 hour lease");
 					lease_seconds = 60 * 60;
